/*!
 * dbo.form.js
 * by Christian Fillies
 * Modified: (29/11/2015)
 *
 */
jQuery.fn.extend({fieldFocus:function(n){return jQuery(this).each(function(){var t=jQuery(this);jQuery(this).click(function(){jQuery(this).find(".input:not([disabled]), .bootstrap-tagsinput input")&&(t.parents(".dbo_form, form").find("."+n).removeClass(n),t.find(".input_container:not(.view_only)").addClass(n),!1===jQuery(this).find(".input:not([disabled])").is("textarea")&&jQuery(this).find(".input:not([disabled])").focus()),jQuery(this).find(".input:not([disabled]), .bootstrap-tagsinput input").focus(function(){t.parents(".dbo_form, form").find("."+n).removeClass(n),t.find(".input_container:not(.view_only)").addClass(n),jQuery(this).find("select").click()})}),jQuery(this).find(".input:not([disabled]), .bootstrap-tagsinput input").focus(function(){t.parents(".dbo_form, form").find("."+n).removeClass(n),t.find(".input_container:not(.view_only)").addClass(n)}),jQuery(this).find(".input:not([disabled]), .bootstrap-tagsinput input").blur(function(){t.find(".input_container:not(.view_only)").removeClass(n)})})}}),jQuery.fn.extend({dboForms:function(){var y="form_row",o="error",C="input_container",_="input",f="onChangeHook",j="i.dbo",c="ui-menu",Q="type_picker",g="placeholder",w="choice",k="hint",x="bootstrap-tagsinput",F="input_container_with_hint",V="input_triggers",O="input_container_with_btns",T="btn",t="handle",S="value_set",W="disabled",z="active",I="focus",n="full_screen";debug=function(t,n){var e;if(-1<window.location.toString().toLowerCase().indexOf("debugforms"))return void 0!==t&&(void 0!==n?console.debug("dbo.forms: "+t,n):console.debug("dbo.forms: "+t)),!0},error=function(t,n){var e;if(-1<window.location.toString().toLowerCase().indexOf("debugforms"))return void 0!==t&&(void 0!==n?console.error("dbo.forms: "+t,n):console.error("dbo.forms: "+t)),!0},debug("intializing",null),this.find('[data-tooltip="true"]').tooltip(),this.find("."+y).fieldFocus(I),
// the following specifies all type of inputs and specifies a default set of classes and settings
this.find("."+C).not("."+T).each(function(t,n){var e=jQuery(n),//jQuery(this),
i=e.outerWidth(),a=e.find("."+_),d=a.attr("type"),o=i,s=a.val(),r=jQuery(n).parent("."+y),//jQuery(this).parent('.'+$css.formRow ),
u=a.attr("disabled"),l=e.find("."+k),f=0,c=e.find("."+w),h=e.find("."+V),m=0,b=e.find("."+g),p=e.find("."+_+", ."+g+", ."+w+", ."+x),v=0;// -1 because of textarea bug
0<a.length?debug(C+" loop: input: ",a):error(C+' loop: no input with a class of "input" found in ',e),h.length&&(e.addClass(O),m=h.outerWidth(),v=1),e.find("textarea").length&&(v=2),l.length&&(e.addClass(F),f=l.outerWidth()),(l.length||h.length)&&(o=i-f-m-v),"number"===d&&(o-=5),p.css({width:o,"margin-left":f,"margin-right":m}),"disabled"===u&&r.addClass(W),""===s||null==s||(debug(C+" loop: value ["+s+"] found, adding $css.hasVaue",null),r.addClass(S),r.find('[data-event~="clear_input"]').fadeIn()),a.click(function(){debug(C+" loop: click detected, adding $css.hasVaue",null),r.addClass(S),r.find('[data-event~="clear_input"]').fadeIn()}),a.blur(function(){""===jQuery(this).val()||null===jQuery(this).val()||void 0===jQuery(this).val()?(r.removeClass(S),r.find('[data-event~="clear_input"]').fadeOut(),debug("blur detected, no value, removing $css.hasVaue",jQuery(this))):(r.addClass(S),r.find('[data-event~="clear_input"]').show(),debug("blur detected, has value, adding $css.hasVaue",jQuery(this)))}),r.find('[data-event~="clear_input"]').each(function(){var t=jQuery(this);t.hide(),t.click(function(){t.parents("."+C).find("."+_).val(""),t.parents(".form_row ").removeClass(S)})})}),// this.find('.'+$css.container).not('.'+$css.button).each(function(index, ele)
this.find('.input[type="email"]').unbind("change"),this.find('.input[type="email"]').change(function(){var t=/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/,n=jQuery(this).val();t.test(n)?jQuery(this).parents("."+y).removeClass(o):jQuery(this).parents("."+y).addClass(o)}),this.find(".type_textarea").each(function(t,n){var e,i=jQuery(n).find("textarea")}),// this.find('.type_textarea').each(function(ndx,ele)
this.find(".type_toggle").each(function(t,n){var e=jQuery(n).find(".form_btn, ."+T).attr("data-toggle-from"),i=e,a=jQuery(n).find(".form_btn, ."+T).attr("data-toggle-to"),d=a,o=jQuery(n).find("."+_),s=jQuery(n).find(j);debug(".type_toggle",jQuery(n)),jQuery(n).find(".form_btn, ."+T).attr("data-toggle-iconTo")&&(d=jQuery(n).find(".form_btn, ."+T).attr("data-toggle-iconTo")),jQuery(n).find(".form_btn, ."+T).attr("data-toggle-iconFrom")&&(i=jQuery(n).find(".form_btn, ."+T).attr("data-toggle-iconFrom"));var r=function t(){var n;u?(
// Code from the first handler here;
n=a,s.removeClass(i).addClass(d),debug(".type_toggle: changing to iconTo.",null)):(
// Code from the second handler here;
n=e,s.removeClass(d).addClass(i),debug(".type_toggle: changing to iconFrom.",null)),o.val()!==n&&(
//if there is a new value, update it
debug(".type_toggle: changing input from:"+o.val()+" to:"+n,null),o.val(n).change()),u=!u};jQuery(n).unbind("click"),jQuery(n).find("a.btn").bind("click",r);var u=!0;if(o.val()===e)var u=!1;r()}),// this.find('.type_toggle').each(function(ndx,ele)
this.find(".type_combo, .type_combined, .type_picker").each(function(t,n){var h=jQuery(n),m=h.find("."+_),b=h.find("."+f),p=h.find(".menu > ul"),v=h.find("."+w),e=h.find("."+C+", label, .form_btn, ."+T);m.is("textarea")&&(e=h.find("."+V+", label, .form_btn, ."+T));var g=h,i=!1,a=g.parent("."+y),d=g.find("."+C),o=d.width(),s=m.attr("id"),r=m.attr("name"),u=m.attr("type");debug("type_combo||type_combined||type_picker",m),o<201&&(o=200),h.is("."+Q)&&(d=g.find("."+C+", .form_btn, ."+T)),
// specifies if the input is of type text or is textarea
(m.is(":text")||m.is("textarea"))&&g.addClass("has-text-input"),a&&1<a.find("."+Q).length&&(i=!0),p.menu({focus:function(){g.addClass(I).find("."+T).addClass(I).find(j).addClass(z),g.find("."+C).addClass(I)},blur:function(){g.removeClass(I).find("."+T).removeClass(I).find(j).removeClass(z),g.find("."+C).removeClass(I)}}).css("width",o+"px").find("."+c).css("width",o/2+"px"),e.unbind("click"),e.click(function(){return g.parents(".dbo_form, form").find("."+I).removeClass(I),g.addClass(I).find("."+T).addClass(I).find(j).addClass(z),g.find("."+C).addClass(I),jQuery("."+c).hide(),p.show().menu().position({my:"left top",at:"left bottom",of:d,collision:"flipfit"}),
// this enables touch devices to close menus on body.click
$("body").css("cursor","pointer"),!1}),
//$input.unbind();
m.focus(function(){return g.addClass(I).find("."+T).addClass(I).find(j).addClass(z),g.find("."+C).addClass(I),jQuery("."+c).fadeOut(),m.is("textarea")||p.show(),
// this enables touch devices to close menus on body.click
$("body").css("cursor","pointer"),!1}),m.blur(function(){return g.removeClass(I).find("."+T).removeClass(I).find(j).removeClass(z),g.find("."+C).removeClass(I),jQuery("."+c).fadeOut(),!1});
// close menu on close outside
var l=function(){$("html").not(m).click(function(){jQuery("."+c).fadeOut(),$("html").unbind("click"),
// this this removes the abillity for touch devices to close menus on body.click
$("body").css("cursor","")})};p.mouseleave(function(){l()}),h.mouseleave(function(){l()}),jQuery("body").unbind("click"),jQuery("body").click(function(t){p.not(p.has(t.target)).fadeOut(),
// this this removes the abillity for touch devices to close menus on body.click
$("body").css("cursor","")}),p.find("li a").unbind("click"),p.find("li a").click(function(){
// debugger;
debug("click detected on li a",jQuery(this));var t=jQuery(this).attr("data-value"),n=jQuery(this).attr("data-choice"),e=jQuery(this).attr("data-icon-choice"),i=jQuery(this).html(),a,d=jQuery(this).text().trim(),o="_blank"===t?"":t;v.length&&(n?v.html(n):e?(v.html(d),v.prepend('<i class="dbo '+e+'"></i>')):e&&n?(v.html(n),v.prepend('<i class="dbo '+e+'"></i>')):v.html(i));
//	debugger;
// look through all the data attributes and find any that begin with data-value-
//debug('looping through data attributes',null);
for(var s=0,r=this.attributes,u=r.length;s<u;s++){var l=r[s].nodeName;if("data-value-"===l.substring(0,11)&&"data-value-1"!==l&&"data-value-2"!==l){
// custom data value found
debug("custom data value:: "+l,null),l="."+l.substring(11,l.length),tokenValue=r[s].nodeValue;var f=h.find(l);f.length?(debug("custom data value: matching input found, setting value: "+tokenValue,null),f.val(tokenValue).change()):error('custom data value: Unable to find hidden input with class "'+l+'"',null)}}
// append the bootstrap modal function
if(t?m.val(o).change():m.val(d).change(),"modal"===jQuery(this).data("toggle")){var c=jQuery(this).data("target");$(c).modal("show"),
// and now add dbo_forms() again
$(c).on("shown.bs.modal",function(t){$(c).find(".dbo_form").dboForms(),$(c).find(".dbo_form .input").first().focus(),$(c).find(".dbo_form .input").first().val(o)})}return b.length&&b.change(),p.hide(),
// this this removes the abillity for touch devices to close menus on body.click
$("body").css("cursor",""),g.removeClass(I).addClass(S).find("."+T).removeClass(I).find(j).removeClass(z),g.find("."+C).removeClass(I),
// if using "_blank" in data-value --> nothing gets passed
"_blank"===t&&(m.focus().val("").change(),g.addClass(I).removeClass(S),v.html(""),p.hide()),!1}),// $menu.find('li a').click(function()
// make sure .focus stays added as long as someone types
m.keypress(function(){g.hasClass(I)||g.addClass(I)})}),// this.find('.type_combo, .type_combined, .type_picker').each(function(ndx,ele)
// password confirmation
this.find(".type_confirm-password").each(function(t,n){var e=$(this),i=e.find("."+_),a=e.prev("."+y),d=a.find("."+_);i.blur(function(){i.val()!==d.val()?(e.addClass(o),a.addClass(o)):(e.removeClass(o),a.removeClass(o))})}),
// datepicker
this.find(".type_date").each(function(t,n){var e=$(this),i=e.width(),a=e.find(_),d=e.find('[data-event~="jquery-ui_cal"]'),o=e.find("."+g),s=e.find("."+V).width();a.datepicker({altField:a,altFormat:"mm-dd-yy",onSelect:function(){o.hide(),e.addClass(S)}}).css("width",i-2*s-20),d.click(function(){return a.datepicker("show"),a.datepicker("refresh"),!1}),a.blur(function(){""===a.val()?o.show():e.addClass(S)})})}// dboForms : function ()
}),// jQuery.fn.extend  
$.fn.donetyping=function(n,e){var i;e||(e=1e3);var a=function(t){i&&(i=null,n(t))};return this.each(function(){var t=$(this);t.on("keyup",function(){i&&clearTimeout(i),i=setTimeout(function(){a(t)},e)}).on("blur",function(){a(t)})}),this},jQuery(function(){jQuery(".dbo_form").dboForms()}),jQuery(window).resize(function(){jQuery(".dbo_form").dboForms()});
/* dbo.form.js */